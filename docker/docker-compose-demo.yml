version: '3.4'

services:
  frontend:
    container_name: frontend
    build: 
      context: ../frontend
      dockerfile: ./Dockerfile
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - vp-run
    ports:
      - "10003:80"

  api:
    container_name: api
    build: 
      context: ../backend/Backend
      dockerfile: ./Dockerfile
    networks:
      - vp-run
    ports:
      - "10004:5199"
    environment:
      - ASPNETCORE_URLS=http://+:5199
    volumes:
      - ~/.aspnet/https:/https:ro
      - ./fileserver/demo:/app/storage
    depends_on:
      wait-for-db:
       condition: service_completed_successfully
  
  wait-for-db:
    container_name: w4db
    image: atkrad/wait4x
    networks:
      - vp-run
    depends_on:
      - db
    command: tcp db:3306 -t 300s -i 5s

  db:
    image: mysql
    container_name: db
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    networks:
      - vp-run
    ports:
      - "3306:3306"
    volumes:
      - ./db/demo.sql:/docker-entrypoint-initdb.d/init.sql
      - ./db/data_demo:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_ROOT_HOST: '%'  # needs to be enclosed with quotes

  file-server:
    container_name: fs
    build: './fileserver'
    networks:
      - vp-run
    ports:
     - '10005:3000'
    volumes:
      - './fileserver/demo:/app/storage'

networks:
   vp-run:
     name: vp-run
